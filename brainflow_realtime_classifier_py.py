# -*- coding: utf-8 -*-
"""brainflow_realtime_classifier.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/116-iGlWgv9cJWSUyo9QqepY7Bz_4_0a5
"""

!pip install brainflow

import time
import numpy as np
from brainflow.board_shim import BoardShim, BrainFlowInputParams
from brainflow.data_filter import DataFilter
from sklearn.ensemble import RandomForestClassifier

# Setup
board_id = -1
params = BrainFlowInputParams()
board = BoardShim(board_id, params)
board.prepare_session()
board.start_stream()
clf = RandomForestClassifier(n_estimators=50, random_state=42)  # Pre-trained dummy
X_train, y_train = np.random.rand(10, 4), np.random.randint(0, 2, 10)  # Dummy data
clf.fit(X_train, y_train)

# Stream (Signal Processing + ML)
try:
    while True:
        time.sleep(1)
        data = board.get_board_data(250)
        if data.size == 0:
            continue
        eeg_channels = BoardShim.get_eeg_channels(board_id)
        sampling_rate = 250
        bands = DataFilter.get_avg_band_powers(data, eeg_channels, sampling_rate, True)[0]
        pred = clf.predict([bands[:4]])  # Delta-theta-alpha-beta
        print(f"Predicted class: {'Left' if pred[0] == 0 else 'Right'}")
except KeyboardInterrupt:
    board.stop_stream()
    board.release_session()