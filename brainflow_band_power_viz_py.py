# -*- coding: utf-8 -*-
"""brainflow_band_power_viz.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YjyRMcX6Vdrt6JLy-Qm0YhEixIByWdmm
"""

!pip install brainflow

import time
import numpy as np
import matplotlib.pyplot as plt
from brainflow.board_shim import BoardShim, BrainFlowInputParams
from brainflow.data_filter import DataFilter

# Setup synthetic board (swap to real hardware later)
board_id = -1  # Synthetic for demo
params = BrainFlowInputParams()
board = BoardShim(board_id, params)
board.prepare_session()
board.start_stream()

# Live plot setup
plt.ion()  # Interactive plotting
fig, ax = plt.subplots()
bands = ['Delta', 'Theta', 'Alpha', 'Beta']
power_vals = [0] * 4  # Initial band powers
bars = ax.bar(bands, power_vals)
ax.set_ylim(0, 100)  # Default rangeâ€”adjust later
ax.set_title("Live EEG Band Powers")
ax.set_ylabel("Power (uV^2)")

# Stream and update
try:
    while True:
        time.sleep(1)  # 1s data chunks
        data = board.get_board_data()
        if data.size == 0:
            continue
        eeg_channels = BoardShim.get_eeg_channels(board_id)
        sampling_rate = BoardShim.get_sampling_rate(board_id)
        bands_data = DataFilter.get_avg_band_powers(data, eeg_channels, sampling_rate, True)
        power_vals = bands_data[0]  # [delta, theta, alpha, beta]
        for bar, val in zip(bars, power_vals):
            bar.set_height(val)
        ax.set_ylim(0, max(power_vals) * 1.2 or 100)  # Dynamic scaling
        plt.draw()
        plt.pause(0.01)
except KeyboardInterrupt:
    board.stop_stream()
    board.release_session()
    plt.close()